class Solution:
 
    def isCyclic(self, V, adj):
        
        indegree = [0]*V
        for i in range(V):
            for j in adj[i]:
                indegree[j] += 1 
        
        queue = []
        for i in range(V):
            if indegree[i] == 0:
                queue.append(i)
        
        cnt = 0
        
        while queue:
            tmp = queue.pop(0)
            for neighbour in adj[tmp]:
                indegree[neighbour] -= 1
                if indegree[neighbour] == 0:  # if indegree[neighbour] != 0 it means another node is pointing to neighbour
                    queue.append(neighbour)
            cnt += 1 
        
        return 1 if cnt != V else 0
