from collections import deque
class Solution:
	def is_Possible(self, grid):
		
		m = len(grid)
		n = len(grid[0])
		
		queue = deque()
		for i in range(m):
		    for j in range(n):
		        
		        if grid[i][j] == 1:
		            queue.append([i, j])
		
		dirs = [(0, 1), (0, -1), (-1, 0), (1, 0)]
		while queue:
		    x, y = queue.popleft()
		    for dx,dy in dirs:
		        if 0<=x+dx<m and 0<=y+dy<n and grid [x+dx][y+dy] != 1 and grid[x+dx][y+dy] != 0:
		            if grid[x+dx][y+dy] == 2:
		                return 1
		            grid[x+dx][y+dy] = 2
		            queue.append([x+dx, y+dy])
	    return 0
